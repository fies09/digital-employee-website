name: digital-employee-middleware

services:
  # PostgreSQL 数据库服务
  middleware_postgres:
    build:
      context: db
      dockerfile: Dockerfile
    container_name: postgres-dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - middleware_postgres_data:/var/lib/postgresql/data
    command: >
      postgres
      -c shared_preload_libraries=vector
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      digital-employee-network:
        aliases:
          - db

  # Redis 缓存服务
  middleware_redis:
    image: redis:7-alpine
    container_name: redis-dev
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - middleware_redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli --no-auth-warning -a ${REDIS_PASSWORD} ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      digital-employee-network:
        aliases:
          - cache
          - redis

volumes:
  # PostgreSQL 数据持久化
  middleware_postgres_data:
    driver: local

  # Redis 数据持久化
  middleware_redis_data:
    driver: local

networks:
  digital-employee-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16